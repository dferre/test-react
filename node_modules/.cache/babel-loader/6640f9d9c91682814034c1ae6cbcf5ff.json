{"ast":null,"code":"var _jsxFileName = \"/Users/mckayferre/Documents/projects/test-application/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [{\n        username: 'Ricky'\n      }, {\n        username: 'Johan'\n      }]\n    };\n\n    this.clickButton = () => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Test\"), React.createElement(UserInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clickButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Click Me\"), React.createElement(UserOutput, {\n      username: this.state.users[0].username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(UserOutput, {\n      username: this.state.users[1].username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/","map":{"version":3,"sources":["/Users/mckayferre/Documents/projects/test-application/src/App.js"],"names":["React","Component","UserInput","UserOutput","App","state","users","username","clickButton","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADK,EAEL;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAFK;AADD,KADkB;;AAAA,SAQ1BC,WAR0B,GAQZ,MAAM,CAEnB,CAVyB;AAAA;;AAY1BC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKD,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAIE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiB,CAAjB,EAAoBC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAtByB;;AAyB5B,eAAeH,GAAf;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nclass App extends Component {\n  state = {\n    users: [\n      { username: 'Ricky'},\n      { username: 'Johan'},\n    ]\n  }\n\n  clickButton = () => {\n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Test</h1>\n        <UserInput />\n        <button onClick={this.clickButton}>Click Me</button> \n        <UserOutput username={this.state.users[0].username} />\n        <UserOutput username={this.state.users[1].username}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/\n"]},"metadata":{},"sourceType":"module"}