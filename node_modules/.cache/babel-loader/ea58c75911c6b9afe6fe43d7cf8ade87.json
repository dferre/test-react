{"ast":null,"code":"import _slicedToArray from \"/Users/mckayferre/Documents/projects/test-application/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mckayferre/Documents/projects/test-application/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nconst App = props => {\n  const _useState = useState({\n    users: [{\n      username: 'Ricky'\n    }, {\n      username: 'Johan'\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        usersState = _useState2[0],\n        setUsers = _useState2[1];\n\n  const clickButton = () => {\n    setUsers({\n      users: [{\n        username: 'Ricky Girvase'\n      }, {\n        username: 'Johan Santanna'\n      }]\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Test\"), React.createElement(UserInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: clickButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Click Me\"), React.createElement(UserOutput, {\n    username: usersState.users[0].username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(UserOutput, {\n    username: usersState.users[1].username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nexport default App;\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/","map":{"version":3,"sources":["/Users/mckayferre/Documents/projects/test-application/src/App.js"],"names":["React","Component","useState","UserInput","UserOutput","App","props","users","username","usersState","setUsers","clickButton"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAAA,oBACYJ,QAAQ,CAAC;AACtCK,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADK,EAEL;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAFK;AAD+B,GAAD,CADpB;AAAA;AAAA,QACZC,UADY;AAAA,QACAC,QADA;;AAQnB,QAAMC,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAC;AACPH,MAAAA,KAAK,EAAE,CACL;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OADK,EAEL;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAFK;AADA,KAAD,CAAR;AAMD,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEF,UAAU,CAACF,KAAX,CAAiB,CAAjB,EAAoBC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEC,UAAU,CAACF,KAAX,CAAiB,CAAjB,EAAoBC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CA1BD;;AA4BA,eAAeH,GAAf;AAKA","sourcesContent":["import React, { Component, useState } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nconst App = props => {\n  const [usersState, setUsers] = useState({\n    users: [\n      { username: 'Ricky'},\n      { username: 'Johan'}\n    ]\n  });\n\n  const clickButton = () => {\n    setUsers({\n      users: [\n        { username: 'Ricky Girvase'},\n        { username: 'Johan Santanna'}\n      ]\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Test</h1>\n      <UserInput />\n      <button onClick={clickButton}>Click Me</button>\n      <UserOutput username={usersState.users[0].username} />\n      <UserOutput username={usersState.users[1].username}/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/\n"]},"metadata":{},"sourceType":"module"}