{"ast":null,"code":"var _jsxFileName = \"/Users/mckayferre/Documents/projects/test-application/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nconst app = props => {\n  const stateArr = useState({\n    users: [{\n      username: 'Ricky'\n    }, {\n      username: 'Johan'\n    }]\n  });\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Test\"), React.createElement(UserInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: this.clickButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Click Me\"), React.createElement(UserOutput, {\n    username: this.state.users[0].username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(UserOutput, {\n    username: this.state.users[1].username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n};\n\nexport default app;\n\nclickButton = () => {\n  this.setState({\n    users: [{\n      username: 'Ricky Girvase'\n    }, {\n      username: 'Johan Santanna'\n    }]\n  });\n};\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/","map":{"version":3,"sources":["/Users/mckayferre/Documents/projects/test-application/src/App.js"],"names":["React","useState","UserInput","UserOutput","app","props","stateArr","users","username","clickButton","state","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAMC,QAAQ,GAAGL,QAAQ,CAAC;AACxBM,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADK,EAEL;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAFK;AADiB,GAAD,CAAzB;AAOA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWH,KAAX,CAAiB,CAAjB,EAAoBC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWH,KAAX,CAAiB,CAAjB,EAAoBC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAjBD;;AAmBA,eAAeJ,GAAf;;AAIAK,WAAW,GAAG,MAAM;AAElB,OAAKE,QAAL,CAAc;AACZJ,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADK,EAEL;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAFK;AADK,GAAd;AAMD,CARD;AASA","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nconst app = props => {\n  const stateArr = useState({\n    users: [\n      { username: 'Ricky'},\n      { username: 'Johan'}\n    ]\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Test</h1>\n      <UserInput />\n      <button onClick={this.clickButton}>Click Me</button>\n      <UserOutput username={this.state.users[0].username} />\n      <UserOutput username={this.state.users[1].username}/>\n    </div>\n  );\n}\n\nexport default app;\n\n\n\nclickButton = () => {\n\n  this.setState({\n    users: [\n      { username: 'Ricky Girvase'},\n      { username: 'Johan Santanna'}\n    ]\n  });\n}\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/\n"]},"metadata":{},"sourceType":"module"}