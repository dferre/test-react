{"ast":null,"code":"var _jsxFileName = \"/Users/mckayferre/Documents/projects/test-application/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Test\"), React.createElement(UserInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(UserOutput, {\n    username: \"Ricky\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(UserOutput, {\n    username: \"Joahon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n}\n\nexport default App;\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/","map":{"version":3,"sources":["/Users/mckayferre/Documents/projects/test-application/src/App.js"],"names":["React","UserInput","UserOutput","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD;;AAED,eAAeA,GAAf;AAEA","sourcesContent":["import React from 'react';\nimport './App.css';\nimport UserInput from './UserInput/UserInput';\nimport UserOutput from './UserOutput/UserOutput';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Test</h1>\n      <UserInput />\n      <UserOutput username=\"Ricky\"/>\n      <UserOutput username=\"Joahon\"/>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\nCreate TWO new components: UserInput and UserOutput\n\nUserInput should hold an input element, UserOutput two paragraphs\n\nOutput multiple UserOutput components in the App component (any paragraph texts of your choice)\n\nPass a username (of your choice) to UserOutput via props and display it there\nAdd state to the App component (=> the username) and pass the username to the UserOutput component\n\nAdd a method to manipulate the state (=> an event-handler method)\n\nPass the event-handler method reference to the UserInput component and bind it to the input-change event\n\nEnsure that the new input entered by the user overwrites the old username passed to UserOutput\n\nAdd two-way-binding to your input (in UserInput) to also display the starting username\n\nAdd styling of your choice to your components/ elements in the components - both with inline styles and stylesheets\n\n*/\n"]},"metadata":{},"sourceType":"module"}